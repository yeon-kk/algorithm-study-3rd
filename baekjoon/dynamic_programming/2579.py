# 한 계단 전dp[i-1], 두 계단 전dp[i-2]을 생각했지만,
# 문제 조건에 계단 3개를 연달아 건널 수 없다는 조건이 있었다.
# 계단을 밟을 수 있는 경우는 4가지가 있다. (가독성을 위해 한 계단을 1로, 두 계단을 2로 표현합니다.)
# [O,O,O] [O,X,O,O] [O,O,X,O] [O,X,O,X,O]
# 그러나 3개를 연달아 밟는 상황이 있는데, 2 아래에서 1 오르고 1을 오르는 경우이다.
# 그래서 1 아래에서 1 오르는 경우는 두가지 경우로 나눠서 생각해야 한다.
# 1. 3 아래에서 2 오르고 1 오르는 경우 [O,X,O,O]
# 2. 2 아래에서 1 오르고 1 오르는 경우 [O,O,O]
# 따라서, 2번을 제외하되 추가적으로 2 아래에서 2 오르는 경우를 비교해야 한다.
# 2 아래에서 2 오르는 경우는 [O,O,X,O] [O,X,O,X,O]를 모두 포함한다.(2 아래까지 올라오는 경우)

# 연달아 밟지 않는 상황 
# 1. 3 아래에서 2 오르고 1 오르는 경우
# 2. 2 아래에서 2 오르는 경우

N=int(input())
dp = [0 for _ in range(N+1)]
x= [0 for _ in range(N+1)]
for i in range(1,N+1):
    x[i]=int(input())
dp[1] = x[1]
if N>1:
    dp[2] = max(dp[1]+x[2],x[2])
for i in range(3,N+1):
    dp[i] = max(dp[i-3]+x[i]+x[i-1] ,dp[i-2]+x[i])
print(dp[N])